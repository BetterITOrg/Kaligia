<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.betterit.kaligia.dao.repository.kaligia.RunSegmentLogMapper">
  <resultMap id="BaseResultMap" type="com.betterit.kaligia.dao.model.kaligia.RunSegmentLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    <result column="run_segment_id" jdbcType="INTEGER" property="runSegmentId" />
    <result column="r_index" jdbcType="INTEGER" property="rIndex" />
    <result column="wavelength" jdbcType="DOUBLE" property="wavelength" />
    <result column="photon_count" jdbcType="DOUBLE" property="photonCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    run_segment_id, r_index, wavelength, photon_count
  </sql>
  <select id="selectByExample" parameterType="com.betterit.kaligia.dao.model.kaligia.RunSegmentLogExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from kaligia.runsegmentlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.betterit.kaligia.dao.model.kaligia.RunSegmentLogExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    delete from kaligia.runsegmentlog
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.betterit.kaligia.dao.model.kaligia.RunSegmentLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    insert into kaligia.runsegmentlog (run_segment_id, r_index, wavelength, 
      photon_count)
    values (#{runSegmentId,jdbcType=INTEGER}, #{rIndex,jdbcType=INTEGER}, #{wavelength,jdbcType=DOUBLE}, 
      #{photonCount,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.betterit.kaligia.dao.model.kaligia.RunSegmentLog">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    insert into kaligia.runsegmentlog
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="runSegmentId != null">
        run_segment_id,
      </if>
      <if test="rIndex != null">
        r_index,
      </if>
      <if test="wavelength != null">
        wavelength,
      </if>
      <if test="photonCount != null">
        photon_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="runSegmentId != null">
        #{runSegmentId,jdbcType=INTEGER},
      </if>
      <if test="rIndex != null">
        #{rIndex,jdbcType=INTEGER},
      </if>
      <if test="wavelength != null">
        #{wavelength,jdbcType=DOUBLE},
      </if>
      <if test="photonCount != null">
        #{photonCount,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    update kaligia.runsegmentlog
    <set>
      <if test="record.runSegmentId != null">
        run_segment_id = #{record.runSegmentId,jdbcType=INTEGER},
      </if>
      <if test="record.rIndex != null">
        r_index = #{record.rIndex,jdbcType=INTEGER},
      </if>
      <if test="record.wavelength != null">
        wavelength = #{record.wavelength,jdbcType=DOUBLE},
      </if>
      <if test="record.photonCount != null">
        photon_count = #{record.photonCount,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Feb 23 15:44:22 EST 2016.
    -->
    update kaligia.runsegmentlog
    set run_segment_id = #{record.runSegmentId,jdbcType=INTEGER},
      r_index = #{record.rIndex,jdbcType=INTEGER},
      wavelength = #{record.wavelength,jdbcType=DOUBLE},
      photon_count = #{record.photonCount,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>